3.2.10 (Media Mark)
3a0b05c8d48c07eae82eceb6571578ab9de3cd5e
o:Sass::Tree::RootNode
:
@linei:@has_childrenT:@template"´(//
// Global Foundation Mixins
//

$experimental: true !default;

// We use this to control border radius.
@mixin radius($radius:$global-radius) {
  @if $radius {
    @if $experimental {
      -webkit-border-radius: $radius;
    }
    border-radius: $radius;
  }
}

// We use this to create equal side border radius on elements.
@mixin side-radius($side, $radius:$global-radius) {
  @if $side == left {
    @if $experimental {
      -moz-border-radius-bottomleft: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-bottom-left-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-bottom-left-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == right {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-bottomright: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-bottom-right-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
  }
  @else if $side == top {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == bottom {
    @if $experimental {
      -moz-border-radius-bottomright: $radius;
      -moz-border-radius-bottomleft: $radius;
      -webkit-border-bottom-right-radius: $radius;
      -webkit-border-bottom-left-radius: $radius;
    }
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

// We can control whether or not we have inset shadows edges.
@mixin inset-shadow($active:true) {
  @if $experimental {
    -webkit-box-shadow: $shiny-edge-size $shiny-edge-color inset;
  }
  box-shadow: $shiny-edge-size $shiny-edge-color inset;

  @if $active { &:active {
    @if $experimental {
      -webkit-box-shadow: $shiny-edge-size $shiny-edge-active-color inset;
    }
    box-shadow: $shiny-edge-size $shiny-edge-active-color inset; } }
}

// We use this to add transitions to elements
@mixin single-transition($property:all, $speed:300ms, $ease:ease-out) {
  @if $experimental {
    -webkit-transition: $property $speed $ease;
    -moz-transition: $property $speed $ease;
  }
  transition: $property $speed $ease;
}

// We use this to add box-sizing across browser prefixes
@mixin box-sizing($type:border-box) {
  @if $experimental {
    -moz-box-sizing: $type;
    -webkit-box-sizing: $type;
  }
  box-sizing: $type;
}

// We use this to create equilateral triangles
@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border: inset $triangle-size;
  @if ($triangle-direction == top) {
    border-color: $triangle-color transparent transparent transparent;
    border-top-style: solid;
  }
  @if ($triangle-direction == bottom) {
    border-color: transparent transparent $triangle-color transparent;
    border-bottom-style: solid;
  }
  @if ($triangle-direction == left) {
    border-color: transparent transparent transparent $triangle-color;
    border-left-style: solid;
  }
  @if ($triangle-direction == right) {
    border-color: transparent $triangle-color transparent transparent;
    border-right-style: solid;
  }
}

// We use this to do clear floats
@mixin clearfix() {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}


// We use this to add a glowing effect to block elements
@mixin block-glowing-effect($selector:focus, $fade-time:300ms, $glowing-effect-color:fade-out($primary-color, .25)) {
  @if $experimental {
    -webkit-transition: -webkit-box-shadow $fade-time, border-color $fade-time ease-in-out;
    -moz-transition: -moz-box-shadow $fade-time, border-color $fade-time ease-in-out;
  }
  transition: box-shadow $fade-time, border-color $fade-time ease-in-out;

  &:#{$selector} {
    @if $experimental {
      -webkit-box-shadow: 0 0 5px $glowing-effect-color;
      -moz-box-shadow: 0 0 5px $glowing-effect-color;
    }
    box-shadow: 0 0 5px $glowing-effect-color;
    border-color: $glowing-effect-color;
  }
}

//
// Foundation Variables
//

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with brower-based text zoom or user-set defaults.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be different and not have it effect the grid breakpoints,
// set $em-base to $base-font-size and make sure $base-font-size is a px value.
$base-font-size: 100% !default;

// $base-line-height is 24px while $base-font-size is 16px
$base-line-height: 150% !default;

// This is the default html and body font-size for the base em value.
$em-base: 16 !default;

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// Converts "px" to "em" using the ($)em-base
@function convert-to-em($value)  {
  $value: strip-unit($value) / strip-unit($em-base) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

// Working in ems is annoying. Think in pixels by using this handy function, emCalc(#)
// Just enter the number, no need to mention "px"
@function emCalc($values...) {
  $max: length($values); // Get the total number of parameters passed

  // If there is only 1 parameter, then return it as an integer.
  // This is done because a list can't be multiplied or divided even if it contains a single value
  @if $max == 1 { @return convert-to-em(nth($values, 1)); }

  $emValues: (); // This will eventually store the converted $values in a list
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i)));
  }
  @return $emValues;
}

// Maybe you want to create rems and pixels
// @function remCalc($pxWidth) {
//   @return $pxWidth / $em-base * 1rem;
// }

// We use these to control various global styles
$body-bg: #fff !default;
$body-font-color: #222 !default;
$body-font-family: "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif !default;
$body-font-weight: normal !default;
$body-font-style: normal !default;

// We use this to control font-smoothing
$font-smoothing: subpixel-antialiased !default;

// We use these to control text direction settings
$text-direction: ltr !default;

// NOTE: No need to change this conditional statement, $text-direction variable controls it all.
$default-float: left !default;
$opposite-direction: right !default;
@if $text-direction == ltr {
  $default-float: left;
  $opposite-direction: right;
} @else {
  $default-float: right;
  $opposite-direction: left;
}

// We use these as default colors throughout
$primary-color: #2ba6cb !default;
$secondary-color: #e9e9e9 !default;
$alert-color: #c60f13 !default;
$success-color: #5da423 !default;

// We use these to make sure border radius matches unless we want it different.
$global-radius: 3px !default;
$global-rounded: 1000px !default;

// We use these to control inset shadow shiny edges and depressions.
$shiny-edge-size: 0 1px 0 !default;
$shiny-edge-color: rgba(#fff, .5) !default;
$shiny-edge-active-color: rgba(#000, .2) !default;

// We use this to control whether or not CSS classes come through in the gem files.
$include-html-classes: true !default;
$include-print-styles: true !default;
$include-html-global-classes: $include-html-classes !default;

// Media Queries
$small-screen: 768px !default;
$medium-screen: 1280px !default;
$large-screen: 1440px !default;

$screen: "only screen" !default;
$small: "only screen and (min-width: #{$small-screen})" !default;
$medium: "only screen and (min-width:#{$medium-screen})" !default;
$large: "only screen and (min-width:#{$large-screen})" !default;
$landscape: "only screen and (orientation: landscape)" !default;
$portrait: "only screen and (orientation: portrait)" !default;

//We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet
$cursor-crosshair-value: crosshair !default;
$cursor-default-value: default !default;
$cursor-pointer-value: pointer !default;
$cursor-help-value: help !default;
$cursor-text-value: text !default;


@if $include-html-global-classes {

  // Set box-sizing globally to handle padding and border widths
  *,
  *:before,
  *:after {
    @include box-sizing(border-box);
  }

  html,
  body { font-size: $base-font-size; }

  // Default body styles
  body {
    background: $body-bg;
    color: $body-font-color;
    padding: 0;
    margin: 0;
    font-family: $body-font-family;
    font-weight: $body-font-weight;
    font-style: $body-font-style;
    line-height: 1; // Set to $base-line-height to take on browser default of 150%
    position: relative;
    cursor: $cursor-default-value;
  }

a:hover { cursor: $cursor-pointer-value; }

  // Override outline from normalize, we don't like it
  a:focus { outline: none; }

  // Grid Defaults to get images and embeds to work properly
  img,
  object,
  embed { max-width: 100%; height: auto; }

  object,
  embed { height: 100%; }
  img { -ms-interpolation-mode: bicubic; }

  #map_canvas,
  .map_canvas {
    img,
    embed,
    object { max-width: none !important;
    }
  }

  // Miscellaneous useful HTML classes
  .left         { float: left !important; }
  .right        { float: right !important; }
  .text-left    { text-align: left !important; }
  .text-right   { text-align: right !important; }
  .text-center  { text-align: center !important; }
  .text-justify { text-align: justify !important; }
  .hide         { display: none; }

  // Font smoothing
  // Antialiased font smoothing works best for light text on a dark background.
  // Apply to single elements instead of globally to body.
  // Note this only applies to webkit-based desktop browsers on the Mac.
  .antialiased { -webkit-font-smoothing: antialiased; }

  // Get rid of gap under images by making them display: inline-block; by default
  img {
    display: inline-block;
    vertical-align: middle;
  }

  //
  // Global resets for forms
  //

  // Make sure textarea takes on height automatically
  textarea { height: auto; min-height: 50px; }

  // Make select elements 100% width by default
  select { width: 100%; }

}
:@options{ :@children[Uo:Sass::Tree::CommentNode
:
@type:silent;i;	@;
[ :@value[")/*
 * Global Foundation Mixins
 * */o:Sass::Tree::VariableNode:
@expro:Sass::Script::Bool;i
;	@;T;i
:
@name"experimental;	@;
[ :@guarded"!defaulto;
;;;i;	@;
[ ;["0/* We use this to control border radius. */o:Sass::Tree::MixinDefNode:@splat0;i;T:
@args[[o:Sass::Script::Variable;"radius;	@:@underscored_name"radiuso;	;i;"global-radius;	@;"global_radius;"radius;	@;
[u:Sass::Tree::IfNodeó[o:Sass::Script::Variable	:
@linei:
@name"radius:@options{ :@underscored_name"radius0[u:Sass::Tree::IfNodeø[o:Sass::Script::Variable	:
@linei:
@name"experimental:@options{ :@underscored_name"experimental0[o:Sass::Tree::PropNode;i:@prop_syntax:new;["-webkit-border-radius:
@tabsi ;@:@children[ :@valueo; 	;i;"radius;@;	"radiuso:Sass::Tree::PropNode;i:@prop_syntax:new;["border-radius:
@tabsi ;@:@children[ :@valueo; 	;i;"radius;@;	"radiuso;
;;;i;	@;
[ ;["F/* We use this to create equal side border radius on elements. */o;;0;i;T;[[o;;"	side;	@;"	side0[o;;"radius;	@;"radiuso;	;i;"global-radius;	@;"global_radius;"side-radius;	@;
[u;õ[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:
@linei:@options{ :@value"	left;i:@operand1o:Sass::Script::Variable	;i:
@name"	side;@:@underscored_name"	side;@u:Sass::Tree::IfNodeú[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:
@linei":@options{ :@value"
right;i":@operand1o:Sass::Script::Variable	;i":
@name"	side;@:@underscored_name"	side;@u:Sass::Tree::IfNodeø[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:
@linei,:@options{ :@value"top;i,:@operand1o:Sass::Script::Variable	;i,:
@name"	side;@:@underscored_name"	side;@u:Sass::Tree::IfNode[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:
@linei6:@options{ :@value"bottom;i6:@operand1o:Sass::Script::Variable	;i6:
@name"	side;@:@underscored_name"	side;@0[u:Sass::Tree::IfNode![o:Sass::Script::Variable	:
@linei7:
@name"experimental:@options{ :@underscored_name"experimental0[	o:Sass::Tree::PropNode;i8:@prop_syntax:new;["#-moz-border-radius-bottomright:
@tabsi ;@:@children[ :@valueo; 	;i8;"radius;@;	"radiuso;
;i9;;;[""-moz-border-radius-bottomleft;i ;@;[ ;o; 	;i9;"radius;@;	"radiuso;
;i:;;;["'-webkit-border-bottom-right-radius;i ;@;[ ;o; 	;i:;"radius;@;	"radiuso;
;i;;;;["&-webkit-border-bottom-left-radius;i ;@;[ ;o; 	;i;;"radius;@;	"radiuso:Sass::Tree::PropNode;i=:@prop_syntax:new;["border-bottom-right-radius:
@tabsi ;@:@children[ ;o;	;i=;"radius;@;"radiuso;;i>;;;["border-bottom-left-radius;i ;@;[ ;o;	;i>;"radius;@;"radius[u;[o:Sass::Script::Variable	:
@linei-:
@name"experimental:@options{ :@underscored_name"experimental0[	o:Sass::Tree::PropNode;i.:@prop_syntax:new;[" -moz-border-radius-topright:
@tabsi ;@:@children[ :@valueo; 	;i.;"radius;@;	"radiuso;
;i/;;;["-moz-border-radius-topleft;i ;@;[ ;o; 	;i/;"radius;@;	"radiuso;
;i0;;;["$-webkit-border-top-right-radius;i ;@;[ ;o; 	;i0;"radius;@;	"radiuso;
;i1;;;["#-webkit-border-top-left-radius;i ;@;[ ;o; 	;i1;"radius;@;	"radiuso:Sass::Tree::PropNode;i3:@prop_syntax:new;["border-top-right-radius:
@tabsi ;@:@children[ ;o;	;i3;"radius;@;"radiuso;;i4;;;["border-top-left-radius;i ;@;[ ;o;	;i4;"radius;@;"radius[u;[o:Sass::Script::Variable	:
@linei#:
@name"experimental:@options{ :@underscored_name"experimental0[	o:Sass::Tree::PropNode;i$:@prop_syntax:new;[" -moz-border-radius-topright:
@tabsi ;@:@children[ :@valueo; 	;i$;"radius;@;	"radiuso;
;i%;;;["#-moz-border-radius-bottomright;i ;@;[ ;o; 	;i%;"radius;@;	"radiuso;
;i&;;;["$-webkit-border-top-right-radius;i ;@;[ ;o; 	;i&;"radius;@;	"radiuso;
;i';;;["'-webkit-border-bottom-right-radius;i ;@;[ ;o; 	;i';"radius;@;	"radiuso:Sass::Tree::PropNode;i):@prop_syntax:new;["border-top-right-radius:
@tabsi ;@:@children[ ;o;	;i);"radius;@;"radiuso;;i*;;;["border-bottom-right-radius;i ;@;[ ;o;	;i*;"radius;@;"radius[u;[o:Sass::Script::Variable	:
@linei:
@name"experimental:@options{ :@underscored_name"experimental0[	o:Sass::Tree::PropNode;i:@prop_syntax:new;[""-moz-border-radius-bottomleft:
@tabsi ;@:@children[ :@valueo; 	;i;"radius;@;	"radiuso;
;i;;;["-moz-border-radius-topleft;i ;@;[ ;o; 	;i;"radius;@;	"radiuso;
;i;;;["&-webkit-border-bottom-left-radius;i ;@;[ ;o; 	;i;"radius;@;	"radiuso;
;i;;;["#-webkit-border-top-left-radius;i ;@;[ ;o; 	;i;"radius;@;	"radiuso:Sass::Tree::PropNode;i:@prop_syntax:new;["border-bottom-left-radius:
@tabsi ;@:@children[ ;o;	;i;"radius;@;"radiuso;;i ;;;["border-top-left-radius;i ;@;[ ;o;	;i ;"radius;@;"radiuso;
;;;iB;	@;
[ ;["E/* We can control whether or not we have inset shadows edges. */o;;0;iC;T;[[o;;"active;	@;"activeo;;iC;	@;T;"inset-shadow;	@;
[u;¬[o:Sass::Script::Variable	:
@lineiD:
@name"experimental:@options{ :@underscored_name"experimental0[o:Sass::Tree::PropNode;iE:@prop_syntax:new;["-webkit-box-shadow:
@tabsi ;@:@children[ :@valueo:Sass::Script::List	;iE:@separator:
space;@;[o; 	;iE;"shiny-edge-size;@;	"shiny_edge_sizeo; 	;iE;"shiny-edge-color;@;	"shiny_edge_coloro:Sass::Script::String	:
@type:identifier;iE;@;"
inseto:Sass::Tree::PropNode;iG:@prop_syntax:new;["box-shadow:
@tabsi ;	@;
[ ;o:Sass::Script::List	;iG:@separator:
space;	@;[o;	;iG;"shiny-edge-size;	@;"shiny_edge_sizeo;	;iG;"shiny-edge-color;	@;"shiny_edge_coloro:Sass::Script::String	;:identifier;iG;	@;"
insetu;ã[o:Sass::Script::Variable	:
@lineiI:
@name"active:@options{ :@underscored_name"active0[o:Sass::Tree::RuleNode:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;iI:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;@;iI:@sourceso:Set:
@hash{ ;[o:Sass::Selector::Parent;@;iIo:Sass::Selector::Pseudo
:	@arg0;@:
@type:
class;iI;["active:@subject0;iI:@has_childrenT:
@tabsi ;@:@children[u:Sass::Tree::IfNodeº[o:Sass::Script::Variable	:
@lineiJ:
@name"experimental:@options{ :@underscored_name"experimental0[o:Sass::Tree::PropNode;iK:@prop_syntax:new;["-webkit-box-shadow:
@tabsi ;@:@children[ :@valueo:Sass::Script::List	;iK:@separator:
space;@;[o; 	;iK;"shiny-edge-size;@;	"shiny_edge_sizeo; 	;iK;"shiny-edge-active-color;@;	"shiny_edge_active_coloro:Sass::Script::String	:
@type:identifier;iK;@;"
inseto:Sass::Tree::PropNode;iM:@prop_syntax:new;["box-shadow;i ;@;[ :@valueo:Sass::Script::List	;iM:@separator:
space;@;![o; 	;iM;"shiny-edge-size;@;	"shiny_edge_sizeo; 	;iM;"shiny-edge-active-color;@;	"shiny_edge_active_coloro:Sass::Script::String	;:identifier;iM;@;!"
inset:
@rule["&:activeo;
;;;iP;	@;
[ ;["5/* We use this to add transitions to elements */o;;0;iQ;T;[[o;;"property;	@;"propertyo;!	;;";iQ;	@;"all[o;;"
speed;	@;"
speedo:Sass::Script::Number:@original"
300ms;iQ:@denominator_units[ ;	@:@numerator_units["ms;i,[o;;"	ease;	@;"	easeo;!	;;";iQ;	@;"ease-out;"single-transition;	@;
[u;	[o:Sass::Script::Variable	:
@lineiR:
@name"experimental:@options{ :@underscored_name"experimental0[o:Sass::Tree::PropNode;iS:@prop_syntax:new;["-webkit-transition:
@tabsi ;@:@children[ :@valueo:Sass::Script::List	;iS:@separator:
space;@;[o; 	;iS;"property;@;	"propertyo; 	;iS;"
speed;@;	"
speedo; 	;iS;"	ease;@;	"	easeo;
;iT;;;["-moz-transition;i ;@;[ ;o;	;iT;;;@;[o; 	;iT;"property;@;	"propertyo; 	;iT;"
speed;@;	"
speedo; 	;iT;"	ease;@;	"	easeo;;iV;;;["transition;i ;	@;
[ ;o;	;iV;; ;	@;[o;	;iV;"property;	@;"propertyo;	;iV;"
speed;	@;"
speedo;	;iV;"	ease;	@;"	easeo;
;;;iY;	@;
[ ;["@/* We use this to add box-sizing across browser prefixes */o;;0;iZ;T;[[o;;"	type;	@;"	typeo;!	;;";iZ;	@;"border-box;"box-sizing;	@;
[u;<[o:Sass::Script::Variable	:
@linei[:
@name"experimental:@options{ :@underscored_name"experimental0[o:Sass::Tree::PropNode;i\:@prop_syntax:new;["-moz-box-sizing:
@tabsi ;@:@children[ :@valueo; 	;i\;"	type;@;	"	typeo;
;i];;;["-webkit-box-sizing;i ;@;[ ;o; 	;i];"	type;@;	"	typeo;;i_;;;["box-sizing;i ;	@;
[ ;o;	;i_;"	type;	@;"	typeo;
;;;ib;	@;
[ ;["6/* We use this to create equilateral triangles */o;;0;ic;T;[[o;;"triangle-size;	@;"triangle_size0[o;;"triangle-color;	@;"triangle_color0[o;;"triangle-direction;	@;"triangle_direction0;"css-triangle;	@;
[o;;id;;;["content;i ;	@;
[ ;o;!;;";	@;"""o;;ie;;;["display;i ;	@;
[ ;o;!;;";	@;"
blocko;;if;;;["
width;i ;	@;
[ ;o;!;;";	@;"0o;;ig;;;["height;i ;	@;
[ ;o;!;;";	@;"0o;;ih;;;["border;i ;	@;
[ ;o;	;ih;; ;	@;[o;!	;;";ih;	@;"
inseto;	;ih;"triangle-size;	@;"triangle_sizeu;d[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:
@lineii:@options{ :@value"top;ii:@operand1o:Sass::Script::Variable	;ii:
@name"triangle-direction;@:@underscored_name"triangle_direction;@0[o:Sass::Tree::PropNode;ij:@prop_syntax:new;["border-color:
@tabsi ;@:@children[ ;o:Sass::Script::List	;ij:@separator:
space;@;[	o;	;ij;"triangle-color;@;"triangle_coloro;		;
;;ij;@;"transparento;		;
;;ij;@;"transparento;		;
;;ij;@;"transparento;;ik;;;["border-top-style;i ;@;[ ;o;	;
;;@;"
solidu;j[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:
@lineim:@options{ :@value"bottom;im:@operand1o:Sass::Script::Variable	;im:
@name"triangle-direction;@:@underscored_name"triangle_direction;@0[o:Sass::Tree::PropNode;in:@prop_syntax:new;["border-color:
@tabsi ;@:@children[ ;o:Sass::Script::List	;in:@separator:
space;@;[	o;		;
;;in;@;"transparento;		;
;;in;@;"transparento;	;in;"triangle-color;@;"triangle_coloro;		;
;;in;@;"transparento;;io;;;["border-bottom-style;i ;@;[ ;o;	;
;;@;"
solidu;f[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:
@lineiq:@options{ :@value"	left;iq:@operand1o:Sass::Script::Variable	;iq:
@name"triangle-direction;@:@underscored_name"triangle_direction;@0[o:Sass::Tree::PropNode;ir:@prop_syntax:new;["border-color:
@tabsi ;@:@children[ ;o:Sass::Script::List	;ir:@separator:
space;@;[	o;		;
;;ir;@;"transparento;		;
;;ir;@;"transparento;		;
;;ir;@;"transparento;	;ir;"triangle-color;@;"triangle_coloro;;is;;;["border-left-style;i ;@;[ ;o;	;
;;@;"
solidu;h[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:
@lineiu:@options{ :@value"
right;iu:@operand1o:Sass::Script::Variable	;iu:
@name"triangle-direction;@:@underscored_name"triangle_direction;@0[o:Sass::Tree::PropNode;iv:@prop_syntax:new;["border-color:
@tabsi ;@:@children[ ;o:Sass::Script::List	;iv:@separator:
space;@;[	o;		;
;;iv;@;"transparento;	;iv;"triangle-color;@;"triangle_coloro;		;
;;iv;@;"transparento;		;
;;iv;@;"transparento;;iw;;;["border-right-style;i ;@;[ ;o;	;
;;@;"
solido;
;;;i{;	@;
[ ;[")/* We use this to do clear floats */o;;0;i|;T;[ ;"clearfix;	@;
[o;;i};;;["
*zoom;i ;	@;
[ ;o;!;;";	@;"1o:Sass::Tree::RuleNode:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;i~:@members[o:Sass::Selector::Sequence;+[o:#Sass::Selector::SimpleSequence
;*@Ü;i~:@sourceso:Set:
@hash{ ;+[o:Sass::Selector::Parent;*@Ü;i~o:Sass::Selector::Pseudo
:	@arg0;*@Ü;:
class;i~;["before:@subject0o;,;+[o;-
;*@Ü;i~;.o;/;0{ ;+[o;1;*@Ü;i~o;2
;30;*@Ü;;4;i~;["
after;50;i~;T;i ;	@;
[o;;i~;;;["content;i ;	@;
[ ;o;!;;";	@;"" "o;;i~;;;["display;i ;	@;
[ ;o;!;;";	@;"
table:
@rule["&:before, &:aftero;';(o;);*" ;i;+[o;,;+[o;-
;*@;i;.o;/;0{ ;+[o;1;*@;io;2
;30;*@;;4;i;["
after;50;i;T;i ;	@;
[o;;i;;;["
clear;i ;	@;
[ ;o;!;;";	@;"	both;6["&:aftero;
;;;i~;	@;
[ ;["@/* We use this to add a glowing effect to block elements */o;;0;i;T;[[o;;"selector;	@;"selectoro;!	;;";i;	@;"
focus[o;;"fade-time;	@;"fade_timeo;#;$"
300ms;i;%[ ;	@;&["ms;i,[o;;"glowing-effect-color;	@;"glowing_effect_coloro:Sass::Script::Funcall;0;i;[o;	;i;"primary-color;	@;"primary_coloro;#;$"	0.25;i;%[ ;	@;&[ ;f	0.25;"fade-out:@keywords{ ;	@;"block-glowing-effect;	@;
[u;7[o:Sass::Script::Variable	:
@linei:
@name"experimental:@options{ :@underscored_name"experimental0[o:Sass::Tree::PropNode;i:@prop_syntax:new;["-webkit-transition:
@tabsi ;@:@children[ :@valueo:Sass::Script::List	;i:@separator:
comma;@;[o;	;i;:
space;@;[o:Sass::Script::String	:
@type:identifier;i;@;"-webkit-box-shadowo; 	;i;"fade-time;@;	"fade_timeo;	;i;;;@;[o;	;;;i;@;"border-coloro; 	;i;"fade-time;@;	"fade_timeo;	;;;i;@;"ease-in-outo;
;i;;;["-moz-transition;i ;@;[ ;o;	;i;;;@;[o;	;i;;;@;[o;	;;;i;@;"-moz-box-shadowo; 	;i;"fade-time;@;	"fade_timeo;	;i;;;@;[o;	;;;i;@;"border-coloro; 	;i;"fade-time;@;	"fade_timeo;	;;;i;@;"ease-in-outo;;i;;;["transition;i ;	@;
[ ;o;	;i;:
comma;	@;[o;	;i;; ;	@;[o;!	;;";i;	@;"box-shadowo;	;i;"fade-time;	@;"fade_timeo;	;i;; ;	@;[o;!	;;";i;	@;"border-coloro;	;i;"fade-time;	@;"fade_timeo;!	;;";i;	@;"ease-in-outo;';i;T;i ;	@;
[u;Ë[o:Sass::Script::Variable	:
@linei:
@name"experimental:@options{ :@underscored_name"experimental0[o:Sass::Tree::PropNode;i:@prop_syntax:new;["-webkit-box-shadow:
@tabsi ;@:@children[ :@valueo:Sass::Script::List	;i:@separator:
space;@;[	o:Sass::Script::Number:@original"0;i:@denominator_units[ ;@:@numerator_units[ ;i o;;"0;i;@;@;[ ;i o;;"5px;i;[ ;@;["px;i
o; 	;i;"glowing-effect-color;@;	"glowing_effect_coloro;
;i;;;["-moz-box-shadow;i ;@;[ ;o;	;i;;;@;[	o;;"0;i;@;@;[ ;i o;;"0;i;@;@;[ ;i o;;"5px;i;[ ;@;["px;i
o; 	;i;"glowing-effect-color;@;	"glowing_effect_coloro;;i;;;["box-shadow;i ;	@;
[ ;o;	;i;; ;	@;[	o;#;$"0;i;%@8;	@;&[ ;i o;#;$"0;i;%@8;	@;&[ ;i o;#;$"5px;i;%[ ;	@;&["px;i
o;	;i;"glowing-effect-color;	@;"glowing_effect_coloro;;i;;;["border-color;i ;	@;
[ ;o;	;i;"glowing-effect-color;	@;"glowing_effect_color;6["&:o;	;i;"selector;	@;"selectoro;
;;;i;	@;
[ ;["%/*
 * Foundation Variables
 * */o;
;;;i;	@;
[ ;["/* The default font-size is set to 100% of the browser style sheet (usually 16px)
 * for compatibility with brower-based text zoom or user-set defaults. */o;
;;;i;	@;
[ ;["/* Since the typical default browser font-size is 16px, that makes the calculation for grid size.
 * If you want your base font-size to be different and not have it effect the grid breakpoints,
 * set $em-base to $base-font-size and make sure $base-font-size is a px value. */o;;o;#;$"	100%;i;%[ ;	@;&["%;ii;i;"base-font-size;	@;
[ ;"!defaulto;
;;;i;	@;
[ ;["B/* $base-line-height is 24px while $base-font-size is 16px */o;;o;#;$"	150%;i;%[ ;	@;&["%;i;i;"base-line-height;	@;
[ ;"!defaulto;
;;;i;	@;
[ ;["M/* This is the default html and body font-size for the base em value. */o;;o;#;$"16;i ;%@8;	@;&[ ;i;i ;"em-base;	@;
[ ;"!defaulto;
;;;i¢;	@;
[ ;["7/* It strips the unit of measure and returns it */o:Sass::Tree::FunctionNode;0;i£;T;[[o;;"num;	@;"num0;"strip-unit;	@;
[o:Sass::Tree::ReturnNode	;o:Sass::Script::Operation
:@operator:div:@operand2o;<
;=:	plus;?o;#;$"1;i¤;%@8;	@;&[ ;i;i¤:@operand1o;<
;=:
times;?o;#;$"0;i¤;%@8;	@;&[ ;i ;i¤;Ao;	;i¤;"num;	@;"num;	@;	@;i¤;Ao;	;i¤;"num;	@;"num;	@;i¤;	@;
[ o;
;;;i§;	@;
[ ;["5/* Converts "px" to "em" using the ($)em-base */o;:;0;i¨;T;[[o;;"
value;	@;"
value0;"convert-to-em;	@;
[	o;;o;<
;=;B;?o;#;$"1em;i©;%[ ;	@;&["em;i;i©;Ao;<
;=;>;?o;7;0;i©;[o;	;i©;"em-base;	@;"em_base;"strip-unit;8{ ;	@;i©;Ao;7;0;i©;[o;	;i©;"
value;	@;"
value;"strip-unit;8{ ;	@;	@;	@;i©;"
value;	@;
[ ;0u;|[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::Number:@original"0em:
@lineiª:@denominator_units[ :@options{ :@numerator_units["em:@valuei ;iª:@operand1o:Sass::Script::Variable	;iª:
@name"
value;@
:@underscored_name"
value;@
0[o:Sass::Tree::VariableNode:
@expro;	;
"0;iª;[ ;@
;[ ;i ;iª;"
value;@
:@children[ :@guarded0o;
;;;iª;	@;
[ ;["/* Turn 0em into 0 */o;;	;o;	;i«;"
value;	@;"
value;i«;	@;
[ o;
;;;i®;	@;
[ ;["/* Working in ems is annoying. Think in pixels by using this handy function, emCalc(#)
 * Just enter the number, no need to mention "px" */o;:;o;;"values;	{ ;"values;i°;T;[ ;"emCalc;	@;
[o;;o;7;0;i±;[o;	;i±;"values;	@;"values;"length;8{ ;	@;i±;"max;	@;
[ ;0o;
;;;i±;	@;
[ ;["4/* Get the total number of parameters passed */o;
;;;i³;	@;
[ ;["¢/* If there is only 1 parameter, then return it as an integer.
 * This is done because a list can't be multiplied or divided even if it contains a single value */u;î[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::Number:@original"1:
@lineiµ:@denominator_units[ :@options{ :@numerator_units[ :@valuei;iµ:@operand1o:Sass::Script::Variable	;iµ:
@name"max;@
:@underscored_name"max;@
0[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Funcall:@splat0;iµ:
@args[o;;0;iµ;[o;	;iµ;"values;@
;"valueso;	;
"1;iµ;@	;@
;[ ;i;"nth:@keywords{ ;@
;"convert-to-em;{ ;@
;iµ;@
:@children[ o;;o;	;i·;; ;	@;[ ;i·;"emValues;	@;
[ ;0o;
;;;i·;	@;
[ ;["E/* This will eventually store the converted $values in a list */o:Sass::Tree::ForNode;i¸:@exclusiveF;T:@too;	;i¸;"max;	@;"max:
@fromo;#;$"1;i¸;%@8;	@;&[ ;i;	@;
[o;;o;7;0;i¹;[o;	;i¹;"emValues;	@;"emValueso;7;0;i¹;[o;7;0;i¹;[o;	;i¹;"values;	@;"valueso;	;i¹;"i;	@;"i;"nth;8{ ;	@;"convert-to-em;8{ ;	@;"append;8{ ;	@;i¹;"emValues;	@;
[ ;0:	@var"io;;	;o;	;i»;"emValues;	@;"emValues;i»;	@;
[ o;
;;;i¾;	@;
[ ;["}/* Maybe you want to create rems and pixels
 * @function remCalc($pxWidth) {
 *   @return $pxWidth / $em-base * 1rem;
 * } */o;
;;;iÃ;	@;
[ ;["8/* We use these to control various global styles */o;;o:Sass::Script::Color	:@attrs{	:rediÿ:
alphai:
greeniÿ:	blueiÿ;iÄ;	@;0;iÄ;"body-bg;	@;
[ ;"!defaulto;;o;H	;I{	;Ji';Ki;Li';Mi';iÅ;	@;0;iÅ;"body-font-color;	@;
[ ;"!defaulto;;o;	;iÆ;;9;	@;[
o;!	;:string;iÆ;	@;"Helvetica Neueo;!	;;N;iÆ;	@;"Helveticao;!	;;";iÆ;	@;"Helveticao;!	;;";iÆ;	@;"
Arialo;!	;;";iÆ;	@;"sans-serif;iÆ;"body-font-family;	@;
[ ;"!defaulto;;o;!	;;";iÇ;	@;"normal;iÇ;"body-font-weight;	@;
[ ;"!defaulto;;o;!	;;";iÈ;	@;"normal;iÈ;"body-font-style;	@;
[ ;"!defaulto;
;;;iÊ;	@;
[ ;["0/* We use this to control font-smoothing */o;;o;!	;;";iË;	@;"subpixel-antialiased;iË;"font-smoothing;	@;
[ ;"!defaulto;
;;;iÍ;	@;
[ ;[":/* We use these to control text direction settings */o;;o;!	;;";iÎ;	@;"ltr;iÎ;"text-direction;	@;
[ ;"!defaulto;
;;;iÐ;	@;
[ ;["h/* NOTE: No need to change this conditional statement, $text-direction variable controls it all. */o;;o;!	;;";iÑ;	@;"	left;iÑ;"default-float;	@;
[ ;"!defaulto;;o;!	;;";iÒ;	@;"
right;iÒ;"opposite-direction;	@;
[ ;"!defaultu;¼[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:
@lineiÓ:@options{ :@value"ltr;iÓ:@operand1o:Sass::Script::Variable	;iÓ:
@name"text-direction;@:@underscored_name"text_direction;@u:Sass::Tree::IfNode÷[00[o:Sass::Tree::VariableNode:
@expro:Sass::Script::String	:
@type:identifier:
@linei×:@options{ :@value"
right;
i×:
@name"default-float;@	:@children[ :@guarded0o; ;o;	;;	;
iØ;@	;"	left;
iØ;"opposite-direction;@	;[ ;0[o:Sass::Tree::VariableNode:
@expro;		;
;;iÔ;@;"	left;iÔ;"default-float;@:@children[ :@guarded0o;;o;		;
;;iÕ;@;"
right;iÕ;"opposite-direction;@;[ ;0o;
;;;iÛ;	@;
[ ;["4/* We use these as default colors throughout */o;;o;H	;I{	;Ji0;Ki;Li¦;MiË;iÜ;	@;0;iÜ;"primary-color;	@;
[ ;"!defaulto;;o;H	;I{	;Jié;Ki;Lié;Mié;iÝ;	@;0;iÝ;"secondary-color;	@;
[ ;"!defaulto;;o;H	;I{	;JiÆ;Ki;Li;Mi;iÞ;	@;0;iÞ;"alert-color;	@;
[ ;"!defaulto;;o;H	;I{	;Jib;Ki;Li¤;Mi(;iß;	@;0;iß;"success-color;	@;
[ ;"!defaulto;
;;;iá;	@;
[ ;["W/* We use these to make sure border radius matches unless we want it different. */o;;o;#;$"3px;iâ;%[ ;	@;&["px;i;iâ;"global-radius;	@;
[ ;"!defaulto;;o;#;$"1000px;iã;%[ ;	@;&["px;iè;iã;"global-rounded;	@;
[ ;"!defaulto;
;;;iå;	@;
[ ;["L/* We use these to control inset shadow shiny edges and depressions. */o;;o;	;iæ;; ;	@;[o;#;$"0;iæ;%@8;	@;&[ ;i o;#;$"1px;iæ;%[ ;	@;&["px;io;#;$"0;iæ;%@8;	@;&[ ;i ;iæ;"shiny-edge-size;	@;
[ ;"!defaulto;;o;7;0;iç;[o;H	;I{	;Jiÿ;Ki;Liÿ;Miÿ;iç;	@;0o;#;$"0.5;iç;%@8;	@;&[ ;f0.5;"	rgba;8{ ;	@;iç;"shiny-edge-color;	@;
[ ;"!defaulto;;o;7;0;iè;[o;H	;I{	;Ji ;Ki;Li ;Mi ;iè;	@;0o;#;$"0.2;iè;%@8;	@;&[ ;f0.20000000000000001 ;"	rgba;8{ ;	@;iè;"shiny-edge-active-color;	@;
[ ;"!defaulto;
;;;iê;	@;
[ ;["[/* We use this to control whether or not CSS classes come through in the gem files. */o;;o;;ië;	@;T;ië;"include-html-classes;	@;
[ ;"!defaulto;;o;;iì;	@;T;iì;"include-print-styles;	@;
[ ;"!defaulto;;o;	;ií;"include-html-classes;	@;"include_html_classes;ií;" include-html-global-classes;	@;
[ ;"!defaulto;
;;;iï;	@;
[ ;["/* Media Queries */o;;o;#;$"
768px;ið;%[ ;	@;&["px;i ;ið;"small-screen;	@;
[ ;"!defaulto;;o;#;$"1280px;iñ;%[ ;	@;&["px;i ;iñ;"medium-screen;	@;
[ ;"!defaulto;;o;#;$"1440px;iò;%[ ;	@;&["px;i ;iò;"large-screen;	@;
[ ;"!defaulto;;o;!	;;N;iô;	@;"only screen;iô;"screen;	@;
[ ;"!defaulto;;o:&Sass::Script::StringInterpolation
:@aftero;!	;;N;iõ;	@;");iõ:	@mido;	;iõ;"small-screen;	@;"small_screen:@beforeo;!	;;N;iõ;	@;"!only screen and (min-width: ;	@;iõ;"
small;	@;
[ ;"!defaulto;;o;O
;Po;!	;;N;iö;	@;");iö;Qo;	;iö;"medium-screen;	@;"medium_screen;Ro;!	;;N;iö;	@;" only screen and (min-width:;	@;iö;"medium;	@;
[ ;"!defaulto;;o;O
;Po;!	;;N;i÷;	@;");i÷;Qo;	;i÷;"large-screen;	@;"large_screen;Ro;!	;;N;i÷;	@;" only screen and (min-width:;	@;i÷;"
large;	@;
[ ;"!defaulto;;o;!	;;N;iø;	@;"-only screen and (orientation: landscape);iø;"landscape;	@;
[ ;"!defaulto;;o;!	;;N;iù;	@;",only screen and (orientation: portrait);iù;"portrait;	@;
[ ;"!defaulto;
;;;iû;	@;
[ ;["w/*We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet */o;;o;!	;;";iü;	@;"crosshair;iü;"cursor-crosshair-value;	@;
[ ;"!defaulto;;o;!	;;";iý;	@;"default;iý;"cursor-default-value;	@;
[ ;"!defaulto;;o;!	;;";iþ;	@;"pointer;iþ;"cursor-pointer-value;	@;
[ ;"!defaulto;;o;!	;;";iÿ;	@;"	help;iÿ;"cursor-help-value;	@;
[ ;"!defaulto;;o;!	;;";i ;	@;"	text;i ;"cursor-text-value;	@;
[ ;"!defaultu;[o:Sass::Script::Variable	:
@linei:
@name" include-html-global-classes:@options{ :@underscored_name" include_html_global_classes0[#o:Sass::Tree::CommentNode
:
@type:silent;i;@:@children[ :@value["F/* Set box-sizing globally to handle padding and border widths */o:Sass::Tree::RuleNode:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;i:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;@;i:@sourceso:Set:
@hash{ ;[o:Sass::Selector::Universal:@namespace0;@;i:@subject0o;;["
o;
;@;i;o;;{ ;[o;;0;@;io:Sass::Selector::Pseudo
:	@arg0;@;:
class;i;["before;0o;;["
o;
;@;i;o;;{ ;[o;;0;@;io;
;0;@;;;i;["
after;0;i:@has_childrenT:
@tabsi ;@;[o:Sass::Tree::MixinNode:@splat0;i	:
@args[o:Sass::Script::String	;:identifier;i	;@;"border-box;"box-sizing:@keywords{ ;@;[ :
@rule["*,
  *:before,
  *:aftero;;o;;" ;i;[o;;[o;
;@<;i;o;;{ ;[o:Sass::Selector::Element	;0;@<;i;["	html;0o;;["
o;
;@<;i;o;;{ ;[o;(	;0;@<;i;["	body;0;i;T; i ;@;[o:Sass::Tree::PropNode;i:@prop_syntax:new;["font-size; i ;@;[ ;o; 	;i;"base-font-size;@;	"base_font_size;'["html,
  bodyo;

;;;i;@;[ ;["/* Default body styles */o;;o;;" ;i;[o;;[o;
;@a;i;o;;{ ;[o;(	;0;@a;i;["	body;0;i;T; i ;@;[o;);i;*;+;["background; i ;@;[ ;o; 	;i;"body-bg;@;	"body_bgo;);i;*;+;["
color; i ;@;[ ;o; 	;i;"body-font-color;@;	"body_font_coloro;);i;*;+;["padding; i ;@;[ ;o;$;;%;@;"0o;);i;*;+;["margin; i ;@;[ ;o;$;;%;@;"0o;);i;*;+;["font-family; i ;@;[ ;o; 	;i;"body-font-family;@;	"body_font_familyo;);i;*;+;["font-weight; i ;@;[ ;o; 	;i;"body-font-weight;@;	"body_font_weighto;);i;*;+;["font-style; i ;@;[ ;o; 	;i;"body-font-style;@;	"body_font_styleo;);i;*;+;["line-height; i ;@;[ ;o;$;;%;@;"1o;

;;;i;@;[ ;["F/* Set to $base-line-height to take on browser default of 150% */o;);i;*;+;["position; i ;@;[ ;o;$;;%;@;"relativeo;);i;*;+;["cursor; i ;@;[ ;o; 	;i;"cursor-default-value;@;	"cursor_default_value;'["	bodyo;;o;;" ;i;[o;;[o;
;@²;i;o;;{ ;[o;(	;0;@²;i;["ao;
;0;@²;;;i;["
hover;0;i;T; i ;@;[o;);i;*;+;["cursor; i ;@;[ ;o; 	;i;"cursor-pointer-value;@;	"cursor_pointer_value;'["a:hovero;

;;;i;@;[ ;["</* Override outline from normalize, we don't like it */o;;o;;" ;i ;[o;;[o;
;@Ð;i ;o;;{ ;[o;(	;0;@Ð;i ;["ao;
;0;@Ð;;;i ;["
focus;0;i ;T; i ;@;[o;);i ;*;+;["outline; i ;@;[ ;o;$;;%;@;"	none;'["a:focuso;

;;;i";@;[ ;["B/* Grid Defaults to get images and embeds to work properly */o;;o;;" ;i%;[o;;[o;
;@í;i%;o;;{ ;[o;(	;0;@í;i%;["img;0o;;["
o;
;@í;i%;o;;{ ;[o;(	;0;@í;i%;["object;0o;;["
o;
;@í;i%;o;;{ ;[o;(	;0;@í;i%;["
embed;0;i%;T; i ;@;[o;);i%;*;+;["max-width; i ;@;[ ;o;$;;%;@;"	100%o;);i%;*;+;["height; i ;@;[ ;o;$;;%;@;"	auto;'["img,
  object,
  embedo;;o;;" ;i(;[o;;[o;
;@;i(;o;;{ ;[o;(	;0;@;i(;["object;0o;;["
o;
;@;i(;o;;{ ;[o;(	;0;@;i(;["
embed;0;i(;T; i ;@;[o;);i(;*;+;["height; i ;@;[ ;o;$;;%;@;"	100%;'["object,
  embedo;;o;;" ;i);[o;;[o;
;@=;i);o;;{ ;[o;(	;0;@=;i);["img;0;i);T; i ;@;[o;);i);*;+;["-ms-interpolation-mode; i ;@;[ ;o;$;;%;@;"bicubic;'["imgo;;o;;" ;i,;[o;;[o;
;@S;i,;o;;{ ;[o:Sass::Selector::Id;@S;i,;["map_canvas;0o;;["
o;
;@S;i,;o;;{ ;[o:Sass::Selector::Class;@S;i,;["map_canvas;0;i,;T; i ;@;[o;;o;;" ;i/;[o;;[o;
;@k;i/;o;;{ ;[o;(	;0;@k;i/;["img;0o;;["
o;
;@k;i/;o;;{ ;[o;(	;0;@k;i/;["
embed;0o;;["
o;
;@k;i/;o;;{ ;[o;(	;0;@k;i/;["object;0;i/;T; i ;@;[o;);i/;*;+;["max-width; i ;@;[ ;o;$;;%;@;"none !important;'["img,
    embed,
    object;'["#map_canvas,
  .map_canvaso;

;;;i3;@;[ ;[",/* Miscellaneous useful HTML classes */o;;o;;" ;i4;[o;;[o;
;@;i4;o;;{ ;[o;-;@;i4;["	left;0;i4;T; i ;@;[o;);i4;*;+;["
float; i ;@;[ ;o;$;;%;@;"left !important;'["
.lefto;;o;;" ;i5;[o;;[o;
;@±;i5;o;;{ ;[o;-;@±;i5;["
right;0;i5;T; i ;@;[o;);i5;*;+;["
float; i ;@;[ ;o;$;;%;@;"right !important;'[".righto;;o;;" ;i6;[o;;[o;
;@Ç;i6;o;;{ ;[o;-;@Ç;i6;["text-left;0;i6;T; i ;@;[o;);i6;*;+;["text-align; i ;@;[ ;o;$;;%;@;"left !important;'[".text-lefto;;o;;" ;i7;[o;;[o;
;@Ý;i7;o;;{ ;[o;-;@Ý;i7;["text-right;0;i7;T; i ;@;[o;);i7;*;+;["text-align; i ;@;[ ;o;$;;%;@;"right !important;'[".text-righto;;o;;" ;i8;[o;;[o;
;@ó;i8;o;;{ ;[o;-;@ó;i8;["text-center;0;i8;T; i ;@;[o;);i8;*;+;["text-align; i ;@;[ ;o;$;;%;@;"center !important;'[".text-centero;;o;;" ;i9;[o;;[o;
;@	;i9;o;;{ ;[o;-;@	;i9;["text-justify;0;i9;T; i ;@;[o;);i9;*;+;["text-align; i ;@;[ ;o;$;;%;@;"justify !important;'[".text-justifyo;;o;;" ;i:;[o;;[o;
;@;i:;o;;{ ;[o;-;@;i:;["	hide;0;i:;T; i ;@;[o;);i:;*;+;["display; i ;@;[ ;o;$;;%;@;"	none;'["
.hideo;

;;;i<;@;[ ;["â/* Font smoothing
 * Antialiased font smoothing works best for light text on a dark background.
 * Apply to single elements instead of globally to body.
 * Note this only applies to webkit-based desktop browsers on the Mac. */o;;o;;" ;i@;[o;;[o;
;@9;i@;o;;{ ;[o;-;@9;i@;["antialiased;0;i@;T; i ;@;[o;);i@;*;+;["-webkit-font-smoothing; i ;@;[ ;o;$;;%;@;"antialiased;'[".antialiasedo;

;;;iB;@;[ ;["W/* Get rid of gap under images by making them display: inline-block; by default */o;;o;;" ;iC;[o;;[o;
;@S;iC;o;;{ ;[o;(	;0;@S;iC;["img;0;iC;T; i ;@;[o;);iD;*;+;["display; i ;@;[ ;o;$;;%;@;"inline-blocko;);iE;*;+;["vertical-align; i ;@;[ ;o;$;;%;@;"middle;'["imgo;

;;;iH;@;[ ;["(/*
 * Global resets for forms
 * */o;

;;;iL;@;[ ;[";/* Make sure textarea takes on height automatically */o;;o;;" ;iM;[o;;[o;
;@w;iM;o;;{ ;[o;(	;0;@w;iM;["textarea;0;iM;T; i ;@;[o;);iM;*;+;["height; i ;@;[ ;o;$;;%;@;"	autoo;);iM;*;+;["min-height; i ;@;[ ;o;$;;%;@;"	50px;'["textareao;

;;;iO;@;[ ;["5/* Make select elements 100% width by default */o;;o;;" ;iP;[o;;[o;
;@;iP;o;;{ ;[o;(	;0;@;iP;["select;0;iP;T; i ;@;[o;);iP;*;+;["
width; i ;@;[ ;o;$;;%;@;"	100%;'["select